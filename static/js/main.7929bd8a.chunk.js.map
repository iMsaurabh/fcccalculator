{"version":3,"sources":["Components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","props","useState","numTwo","setNumTwo","currentOperator","setCurrentOperator","numOne","setNumOne","tempSavedNum","setTempSavedNum","displayText","setDisplayText","equalClicked","setEqualClicked","multiplySelected","setMultiplySelected","createEnteredNumber","enteredKey","length","concat","handleCalculations","num2","num1","operator","operand1","Number","operand2","useEffect","handleNumberClick","event","target","textContent","indexOf","handleOperatorClick","clickedOperator","toString","className","id","onClick","value","outcomeString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7929bd8a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './Calculator.css';\n\nfunction Calculator(props) {\n\tconst [numTwo, setNumTwo] = useState('0');\n\tconst [currentOperator, setCurrentOperator] = useState(null);\n\tconst [numOne, setNumOne] = useState('0');\n\tconst [tempSavedNum, setTempSavedNum] = useState('0');\n\tconst [displayText, setDisplayText] = useState('0');\n\n\tconst [equalClicked, setEqualClicked] = useState(false);\n\tconst [multiplySelected, setMultiplySelected] = useState(false);\n\n\t//call this function from only - . and number keys with key text\n\tconst createEnteredNumber = (enteredKey) => {\n\t\tif (tempSavedNum.length === 1) {\n\t\t\tif (tempSavedNum === '0') {\n\t\t\t\treturn enteredKey;\n\t\t\t} else if (tempSavedNum === '-') {\n\t\t\t\treturn '-'.concat(enteredKey);\n\t\t\t} else {\n\t\t\t\treturn tempSavedNum.concat(enteredKey);\n\t\t\t}\n\t\t} else {\n\t\t\treturn numOne.concat(enteredKey);\n\t\t}\n\t};\n\n\tconst moveNumOneToNumTwo = (numberToHold) => {\n\t\tsetNumTwo(numberToHold);\n\t};\n\n\tconst handleCalculations = (num2, num1, operator) => {\n\t\tconst operand1 = Number(num1);\n\t\tconst operand2 = Number(num2);\n\t\tswitch (operator) {\n\t\t\tcase '+':\n\t\t\t\treturn operand2 + operand1;\n\n\t\t\tcase '-':\n\t\t\t\treturn operand2 - operand1;\n\n\t\t\tcase 'x':\n\t\t\t\treturn operand2 * operand1;\n\n\t\t\tcase '/':\n\t\t\t\treturn operand2 / operand1;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetDisplayText(currentOperator);\n\t}, [currentOperator]);\n\tuseEffect(() => {\n\t\tsetDisplayText(numOne);\n\t}, [numOne]);\n\n\tconst handleNumberClick = (event) => {\n\t\tif (numOne === '0') {\n\t\t\tif (event.target.textContent === '0') {\n\t\t\t} else {\n\t\t\t\tsetNumOne(''.concat(createEnteredNumber(event.target.textContent)));\n\t\t\t\tsetDisplayText(\n\t\t\t\t\t''.concat(createEnteredNumber(event.target.textContent))\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (numOne === '-') {\n\t\t\tsetNumOne(numOne.concat(createEnteredNumber(event.target.textContent)));\n\t\t\tsetDisplayText(\n\t\t\t\tnumOne.concat(createEnteredNumber(event.target.textContent))\n\t\t\t);\n\t\t} else {\n\t\t\t//check if an operator was clicked on last click\n\t\t\t////console.log('line 67 inside number click');\n\t\t\t////console.log(['-', '+', '/', 'x'].indexOf(displayText));\n\t\t\tif (['-', '+', '/', 'x'].indexOf(displayText) >= 0) {\n\t\t\t\tsetNumOne(''.concat(createEnteredNumber(event.target.textContent)));\n\t\t\t\tsetDisplayText(\n\t\t\t\t\t''.concat(createEnteredNumber(event.target.textContent))\n\t\t\t\t);\n\t\t\t}\n\t\t\t//else just concat the clicked number\n\t\t\telse {\n\t\t\t\tsetNumOne(numOne.concat(createEnteredNumber(event.target.textContent)));\n\t\t\t\tsetDisplayText(\n\t\t\t\t\tnumOne.concat(createEnteredNumber(event.target.textContent))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleOperatorClick = (event) => {\n\t\t//console.log('clicked: ' + event.target.textContent);\n\t\tif (event.target.textContent === 'x') {\n\t\t\tsetMultiplySelected(true);\n\t\t}\n\t\t//Checking if first ever clicked button was an operator and not number\n\t\tif (event.target.textContent === '-' && numOne === '0') {\n\t\t\t//console.log('level 1.1');\n\t\t\t//just display and set num1 to '-'\n\t\t\tsetNumOne(''.concat(createEnteredNumber(event.target.textContent)));\n\t\t}\n\t\t//Checking what to do if anything other than '-' is clicked for first ever time after calculator loads\n\t\telse if (\n\t\t\t['/', '+', 'x'].indexOf(event.target.textContent) >= 0 &&\n\t\t\tnumOne === '0'\n\t\t) {\n\t\t\t//console.log('level 1.2');\n\t\t\t//Do Nothing\n\t\t}\n\t\t//When an operator is clicked anytime other than first ever time.\n\t\telse {\n\t\t\t//console.log('level 1.3');\n\t\t\t//initialize variable to hold clicked operator\n\t\t\tconst clickedOperator = event.target.textContent;\n\t\t\t//All operator logic here\n\t\t\t//also *- logic here\n\t\t\t//need to keep num2 updated with calculations\n\t\t\t//checks if clicked button is an operator and if previous clicked button was also operator\n\t\t\tif (\n\t\t\t\t['/', '+', 'x', '-'].indexOf(clickedOperator) >= 0 &&\n\t\t\t\t['/', '+', 'x'].indexOf(displayText) < 0\n\t\t\t) {\n\t\t\t\t//console.log('level 1.3.1');\n\t\t\t\t//then check if num2 = 0\n\t\t\t\tif (numTwo === '0') {\n\t\t\t\t\t//console.log('level 1.3.1.1');\n\t\t\t\t\t//then move num1 to num2 and set operator to clicked operator\n\t\t\t\t\tmoveNumOneToNumTwo(numOne);\n\t\t\t\t} else {\n\t\t\t\t\t//console.log('level 1.3.1.2');\n\t\t\t\t\t//else perform the last held operator on num1 and num2 and set num2 equal to outcome\n\n\t\t\t\t\tif (equalClicked === true) {\n\t\t\t\t\t\t//console.log('level 1.3.1.2.1');\n\t\t\t\t\t\tsetCurrentOperator(clickedOperator);\n\t\t\t\t\t\tsetDisplayText(clickedOperator);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//console.log('level 1.3.1.2.2');\n\t\t\t\t\t\t//checking if divide and multiply doesn't result into NaN\n\t\t\t\t\t\tif (numOne === '-' && clickedOperator !== '-') {\n\t\t\t\t\t\t\tsetCurrentOperator(clickedOperator);\n\t\t\t\t\t\t\tsetNumOne('0');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetNumTwo(\n\t\t\t\t\t\t\t\thandleCalculations(numTwo, numOne, currentOperator).toString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetCurrentOperator(clickedOperator);\n\t\t\t\tsetEqualClicked(false);\n\t\t\t}\n\t\t\t//Otherwise checks if currently an operator is selected\n\t\t\telse if (['/', '+', 'x', '-'].indexOf(displayText) >= 0) {\n\t\t\t\t//console.log('level 1.3.2');\n\n\t\t\t\t//then checks if previous operator was '*' and current one is '-' or not.\n\t\t\t\tif (multiplySelected === true && event.target.textContent === '-') {\n\t\t\t\t\t//console.log('level 1.3.2.1');\n\t\t\t\t\t//do not update operator and prefix number with '-'\n\t\t\t\t\tsetNumOne(''.concat(createEnteredNumber(event.target.textContent)));\n\t\t\t\t} else if (\n\t\t\t\t\tmultiplySelected === true &&\n\t\t\t\t\tevent.target.textContent !== '-'\n\t\t\t\t) {\n\t\t\t\t\t//console.log('level 1.3.2.1');\n\t\t\t\t\tsetNumOne('0');\n\t\t\t\t\tsetCurrentOperator(event.target.textContent);\n\t\t\t\t\tsetMultiplySelected(false);\n\t\t\t\t}\n\t\t\t\t//else just updates operator\n\t\t\t\telse {\n\t\t\t\t\t//console.log('level 1.3.2.2');\n\t\t\t\t\tsetCurrentOperator(event.target.textContent);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst handleDecimalClick = (event) => {\n\t\tif (numOne.indexOf('.') < 0) {\n\t\t\tsetNumOne(numOne.concat(createEnteredNumber(event.target.textContent)));\n\t\t}\n\t};\n\tconst handleEqualClicked = (event) => {\n\t\tconst outcomeString = handleCalculations(\n\t\t\tnumTwo,\n\t\t\tnumOne,\n\t\t\tcurrentOperator\n\t\t).toString();\n\t\tsetDisplayText(outcomeString);\n\t\tsetNumTwo(outcomeString);\n\t\tsetEqualClicked(true);\n\t};\n\tconst clearDisplay = () => {\n\t\tsetNumOne('0');\n\t\tsetNumTwo('0');\n\t\tsetTempSavedNum('0');\n\t\tsetDisplayText('0');\n\t\tsetCurrentOperator(null);\n\t\tsetMultiplySelected(false);\n\t};\n\n\treturn (\n\t\t<div className='MainContainer bg-warning'>\n\t\t\t<div className='Display bg-dark'>\n\t\t\t\t<div className='HistoricalDisplay text-warning'>All steps here</div>\n\t\t\t\t<div id='display' className='CurrentDisplay text-light'>\n\t\t\t\t\t{displayText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='ButtonGroup d-flex flex-row'>\n\t\t\t\t<div className='ButtonGroupOne flex-fill'>\n\t\t\t\t\t<div className='BGORowOne d-flex flex-row justify-content-between'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='clear'\n\t\t\t\t\t\t\tclassName='AC RectangleButton bg-danger text-light flex-grow-1'\n\t\t\t\t\t\t\tonClick={clearDisplay}>\n\t\t\t\t\t\t\tAC\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='divide'\n\t\t\t\t\t\t\tclassName='divide SquareButton bg-secondary text-light'\n\t\t\t\t\t\t\tonClick={handleOperatorClick}>\n\t\t\t\t\t\t\t/\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='BGORowTwo d-flex flex-row justify-content-between'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='seven'\n\t\t\t\t\t\t\tvalue='7'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t7\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='eight'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t8\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='nine'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t9\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='BGORowThree d-flex flex-row justify-content-between'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='four'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t4\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='five'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t5\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='six'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t6\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='BGORowFour d-flex flex-row justify-content-between'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='one'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t1\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='two'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t2\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='three'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t3\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='BGORowFive d-flex flex-row justify-content-between'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='zero'\n\t\t\t\t\t\t\tclassName='RectangleButton bg-dark text-light flex-grow-1'\n\t\t\t\t\t\t\tonClick={handleNumberClick}>\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid='decimal'\n\t\t\t\t\t\t\tclassName='SquareButton bg-dark text-light'\n\t\t\t\t\t\t\tonClick={handleDecimalClick}>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='ButtonGroupTwo flex-fill justify-content-between'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid='multiply'\n\t\t\t\t\t\tclassName='SquareButton bg-secondary text-light'\n\t\t\t\t\t\tonClick={handleOperatorClick}>\n\t\t\t\t\t\tx\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid='subtract'\n\t\t\t\t\t\tclassName='SquareButton bg-secondary text-light'\n\t\t\t\t\t\tonClick={handleOperatorClick}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid='add'\n\t\t\t\t\t\tclassName='SquareButton bg-secondary text-light'\n\t\t\t\t\t\tonClick={handleOperatorClick}>\n\t\t\t\t\t\t+\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid='equals'\n\t\t\t\t\t\tclassName='VerticalRectangleButton bg-primary text-light flex-grow-1'\n\t\t\t\t\t\tonClick={handleEqualClicked}>\n\t\t\t\t\t\t=\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default Calculator;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Calculator from './Components/Calculator';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Calculator />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}